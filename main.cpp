/// =========================================================================
/// Written by pfederl@ucalgary.ca in 2020, for CPSC457.
/// =========================================================================
/// DO NOT EDIT THIS FILE. DO NOT SUBMIT THIS FILE FOR GRADING.

#include "sumFactors.h"
#include <iostream>

int
main( int argc, char ** argv)
{
  /// parse command line arguments
  int nThreads = 1;
  if( argc != 1 && argc != 2) {
    std::cout << "Usage: " << argv[0] << " [nThreads]\n"
              << "    the default for nThreads is 1 thread.\n";
    exit(-1);
  }
  if( argc == 2) nThreads = atoi( argv[1]);

  /// handle invalid arguments
  if( nThreads < 1 || nThreads > 256) {
    std::cout << "Bad arguments. 1 <= nThreads <= 256!\n";
    exit(-1);
  }
  std::cout << "Using " << nThreads
            << " thread" << (nThreads == 1 ? "" : "s")
            << ".\n";

  /// sum up the divisors
  int64_t sum = sum_factors( nThreads);

  /// report results
  std::cout << "Sum of divisors = " << sum << "\n";

  return 0;
}

